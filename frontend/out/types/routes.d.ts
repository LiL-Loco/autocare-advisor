// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/dashboard" | "/admin/dashboard/analytics" | "/admin/dashboard/moderation" | "/admin/dashboard/partners" | "/admin/dashboard/products" | "/admin/dashboard/reports" | "/admin/dashboard/settings" | "/admin/dashboard/simple" | "/admin/email-management" | "/admin/invitations" | "/admin/invitations/new" | "/agb" | "/datenschutz" | "/demo/image-enhancement" | "/impressum" | "/kontakt" | "/marken" | "/marken/[slug]" | "/marken/[slug]/produkt/[productId]" | "/offline" | "/partner-werden" | "/partner/api/documentation" | "/partner/api/integrations" | "/partner/api/keys" | "/partner/api/webhooks" | "/partner/billing" | "/partner/billing/history" | "/partner/billing/payment-methods" | "/partner/billing/plans" | "/partner/billing/upgrade" | "/partner/billing/usage" | "/partner/customers/behavior" | "/partner/customers/insights" | "/partner/customers/segments" | "/partner/dashboard" | "/partner/dashboard/analytics" | "/partner/dashboard/analytics/exports" | "/partner/dashboard/analytics/reports" | "/partner/dashboard/api" | "/partner/dashboard/customers/journey" | "/partner/dashboard/marketing/campaigns" | "/partner/dashboard/notifications/center" | "/partner/dashboard/products" | "/partner/dashboard/products/add" | "/partner/dashboard/products/advanced" | "/partner/dashboard/products/import" | "/partner/dashboard/products/upload" | "/partner/dashboard/settings" | "/partner/login" | "/partner/marketing/performance" | "/partner/marketing/templates" | "/partner/notifications/analytics" | "/partner/notifications/preferences" | "/partner/notifications/templates" | "/partner/onboarding" | "/partner/products" | "/partner/products/[id]/analytics" | "/partner/products/[id]/edit" | "/partner/products/new" | "/partner/settings/backup" | "/partner/settings/branding" | "/partner/settings/dashboard" | "/partner/settings/integrations" | "/partner/settings/security" | "/pflegeanleitungen" | "/produkte" | "/produkte/[slug]" | "/recommendations" | "/start-questionnaire" | "/tracking-test"
type AppRouteHandlerRoutes = "/api/admin/audiences" | "/api/admin/campaigns" | "/api/categories" | "/api/products/search" | "/api/products/slug/[slug]" | "/api/products/suggestions"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/dashboard": {}
  "/admin/dashboard/analytics": {}
  "/admin/dashboard/moderation": {}
  "/admin/dashboard/partners": {}
  "/admin/dashboard/products": {}
  "/admin/dashboard/reports": {}
  "/admin/dashboard/settings": {}
  "/admin/dashboard/simple": {}
  "/admin/email-management": {}
  "/admin/invitations": {}
  "/admin/invitations/new": {}
  "/agb": {}
  "/api/admin/audiences": {}
  "/api/admin/campaigns": {}
  "/api/categories": {}
  "/api/products/search": {}
  "/api/products/slug/[slug]": { "slug": string; }
  "/api/products/suggestions": {}
  "/datenschutz": {}
  "/demo/image-enhancement": {}
  "/impressum": {}
  "/kontakt": {}
  "/marken": {}
  "/marken/[slug]": { "slug": string; }
  "/marken/[slug]/produkt/[productId]": { "slug": string; "productId": string; }
  "/offline": {}
  "/partner-werden": {}
  "/partner/api/documentation": {}
  "/partner/api/integrations": {}
  "/partner/api/keys": {}
  "/partner/api/webhooks": {}
  "/partner/billing": {}
  "/partner/billing/history": {}
  "/partner/billing/payment-methods": {}
  "/partner/billing/plans": {}
  "/partner/billing/upgrade": {}
  "/partner/billing/usage": {}
  "/partner/customers/behavior": {}
  "/partner/customers/insights": {}
  "/partner/customers/segments": {}
  "/partner/dashboard": {}
  "/partner/dashboard/analytics": {}
  "/partner/dashboard/analytics/exports": {}
  "/partner/dashboard/analytics/reports": {}
  "/partner/dashboard/api": {}
  "/partner/dashboard/customers/journey": {}
  "/partner/dashboard/marketing/campaigns": {}
  "/partner/dashboard/notifications/center": {}
  "/partner/dashboard/products": {}
  "/partner/dashboard/products/add": {}
  "/partner/dashboard/products/advanced": {}
  "/partner/dashboard/products/import": {}
  "/partner/dashboard/products/upload": {}
  "/partner/dashboard/settings": {}
  "/partner/login": {}
  "/partner/marketing/performance": {}
  "/partner/marketing/templates": {}
  "/partner/notifications/analytics": {}
  "/partner/notifications/preferences": {}
  "/partner/notifications/templates": {}
  "/partner/onboarding": {}
  "/partner/products": {}
  "/partner/products/[id]/analytics": { "id": string; }
  "/partner/products/[id]/edit": { "id": string; }
  "/partner/products/new": {}
  "/partner/settings/backup": {}
  "/partner/settings/branding": {}
  "/partner/settings/dashboard": {}
  "/partner/settings/integrations": {}
  "/partner/settings/security": {}
  "/pflegeanleitungen": {}
  "/produkte": {}
  "/produkte/[slug]": { "slug": string; }
  "/recommendations": {}
  "/start-questionnaire": {}
  "/tracking-test": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
